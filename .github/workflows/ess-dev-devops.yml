name: ESS-Dev-DevOps
on:
  push:
    tags-ignore:
      - v1.*  
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: set go work directory
      run: mkdir -p $HOME/work/tink/go
    - name: checkout branch
      uses: actions/checkout@v1
      with:
        fetch-depth: 1
        path: go/src/github.com/packethost/tink
    - name: 
      uses: actions/setup-go@v2
      with:
        go-version: '1.14.6'
    - name: set gopath
      run: echo "GOPATH=$HOME/work/tink/go" >> $GITHUB_ENV
    - name: get goimports
      run: go get golang.org/x/tools/cmd/goimports && goimports -d . | (! grep .)
    - name: get golint
      run: |
        go get -u golang.org/x/lint/golint
    - name: compile binaries
      run: |
        go build -o ./cmd/tink-cli ./cmd/tink-cli
        go build -o ./cmd/tink-server ./cmd/tink-server
        go build -o ./cmd/tink-worker ./cmd/tink-worker
    - name: set version
      run: |
        echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV
    - name: build docker image
      run: |
        docker build cmd/tink-cli -t quay.io/ess_metal/tink-cli:$VERSION
        docker build cmd/tink-server -t quay.io/ess_metal/tink-server:$VERSION
        docker build cmd/tink-worker -t quay.io/ess_metal/tink-worker:$VERSION
    - name: login to quay.io
      uses: docker/login-action@v1
      with:
        registry: quay.io
        username: ${{ secrets.QUAY_USER }}
        password: ${{ secrets.QUAY_SECRET }}
    - name: push images to quay
      run: |
        docker push quay.io/ess_metal/tink-cli:$VERSION
        docker push quay.io/ess_metal/tink-server:$VERSION
        docker push quay.io/ess_metal/tink-worker:$VERSION
